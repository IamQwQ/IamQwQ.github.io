<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://IamQwQ.github.io</id>
    <title>巨兽的多面体空间</title>
    <updated>2020-10-27T07:47:31.096Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://IamQwQ.github.io"/>
    <link rel="self" href="https://IamQwQ.github.io/atom.xml"/>
    <subtitle>暂时使用模板来写文
会努力来脱离模板的</subtitle>
    <logo>https://IamQwQ.github.io/images/avatar.png</logo>
    <icon>https://IamQwQ.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 巨兽的多面体空间</rights>
    <entry>
        <title type="html"><![CDATA[「多面体」关于喝咖啡反而更加犯困的问题]]></title>
        <id>https://IamQwQ.github.io/post/polyhedronCoffeeMakesPeopleSleepy/</id>
        <link href="https://IamQwQ.github.io/post/polyhedronCoffeeMakesPeopleSleepy/">
        </link>
        <updated>2020-10-27T07:38:08.000Z</updated>
        <content type="html"><![CDATA[<p>以前在和朋友絮叨日常的时候偶尔会听到喝咖啡困的事，开始并没有仔细琢磨，权当是抱怨和哗众取宠了。但是随着时间的流逝，耳闻越来越多的人提到过这方面的事，刚好最近刚写完关于咖啡的事，又突然想起来这件事，顺便翻了翻资料查了一下。</p>
<p>开始是从咖啡的作用过程开始查的，然后就发现= =</p>
<blockquote>
<p>1.竞争性地阻断腺苷受体。2.竞争性地结合苯二氮卓类受体，限制了CI通道的开放。3.使cAMP增多。这是药理作用机制。小剂量的咖啡因能兴奋大脑皮层，因此能提神。而较大剂量能收缩脑血管，故此能够镇痛，但是会成瘾。</p>
<p>咖啡因是如何作用于人体的？ - 蔡卫纯的回答 - 知乎 https://www.zhihu.com/question/19958348/answer/13476426</p>
</blockquote>
<p>有一说一，看不懂。</p>
<p>在这方面实在提不起兴趣，于是决定不求甚解 orz</p>
<blockquote>
<p>埃森克提出外向的人大脑皮层的抑制过程强而兴奋过程弱，他们的神经系统非常发达，对刺激有很强的忍受能力。而内向的人的皮层兴奋过程强而抑制过程弱，所以忍受刺激的能力有限。因此，对外向的人来说他们的大脑对刺激的反应慢且微弱，他们是刺激的寻求者，渴望强烈的感觉刺激，这使得他们通过各种方式来寻求兴奋，他们喜欢参加派对、交朋友、冒险等。相反，内向性格的人天生皮层刺激唤醒水平高，对刺激的反应既迅速又强烈，他们只能忍受微弱的刺激，所以更喜欢阅读、写作、下棋等活动。有研究表明，外向性格的人很早就寻求社会关系，他们的社交技巧发展完善，而社交活动是他们快乐的一大源泉，并且培养了他们自信解决问题的能力。极端外向的人只是在避免无聊，他们的问题是要满足对刺激的需要。</p>
<p>为什么有些人喝咖啡反而更加犯困？ - 范不说的回答 - 知乎 https://www.zhihu.com/question/25286099/answer/865648712</p>
</blockquote>
<p>上面转载的回答有些地方表述的有些模糊，这个理论是艾森克的外-内倾概念，除了具有其本身的一般含义外还与神经系统的兴奋过程和抑制过程相联系，他发现：</p>
<blockquote>
<p>兴奋过程可以易化<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>正在进行的感觉、认知和活动；抑制过程可以干扰或影响有机体正在进行的感觉、认知和活动。</p>
</blockquote>
<blockquote>
<p>他发现高外倾性的人兴奋过程发生慢、强度弱、持续时间短，而抑制过程发生快、强度强、维持时间长。这种人难以形成条件反射。高内倾性的人兴奋过程发生快、强度强、持续时间长，而抑制过程发生慢、强度弱、维持时间短。这种人容易形成条件反射。</p>
</blockquote>
<p>这是外倾性和内倾性的定义：</p>
<blockquote>
<p>瑞士心理学家C.G.荣格于1931年提出的人格类型概念，与内倾相对应。荣格认为,如果一人的心理能量,他的兴趣和注意一般指向外部，指向他人或外部刺激，其行为主要是由外界事物而不是他们个人的思想感情所指导，那么这个人主要是外倾的，否则就是内倾的。</p>
</blockquote>
<p>高外倾性的人因为抑制过程作用太强所以对于刺激的接受能力很强，高内倾性的人因为抑制过程效果不高所以更喜欢微弱的刺激，但是咖啡因是直接作用大脑皮层，就算高内倾性的人不喜欢为什么会反而困呢？</p>
<p>这里涉及到一个名词就是最佳皮质唤醒水平（现在多称为&quot;唤醒水平&quot;）</p>
<blockquote>
<p>动机理论里面有一个是理论是唤醒水平理论，就是指人都追求一个最佳的唤醒水平，这个唤醒水平一般比较适中。所以如果是内向的人，本身有较高的唤醒水平，就不需要太多的外界刺激了，否则就会超过最佳唤醒水平。</p>
</blockquote>
<blockquote>
<p>唤醒指在刺激作用下通过脑干的网状结构提高大脑皮层的兴奋性，同时加强肌肉的紧张状态</p>
</blockquote>
<p>如果本身就处在最佳的唤醒水平，超过了这个量，在baidu百科定义中是这样表述的</p>
<blockquote>
<p>一般人偏好中等唤醒水平，导致最佳唤醒。过高和过低都将导致不好的表现。</p>
</blockquote>
<p>（虽然没说&quot;不好的表现是指什么&quot;）</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>易化是局部阈下兴奋状态能使神经元兴奋性升高的现象。 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java 面向对象]]></title>
        <id>https://IamQwQ.github.io/post/javaOop/</id>
        <link href="https://IamQwQ.github.io/post/javaOop/">
        </link>
        <updated>2020-10-25T17:49:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="初识类">初识类</h3>
<p>类是面向对象思想中的核心部分，我们通过类来实例化出对象。</p>
<p>如何理解类和实例化呢？</p>
<p>类在面向对象思想中应当是抽象、概念的，比如一条狗，他有着相当多的属性和行为，这些属性和行为全部封装在这个类中。</p>
<figure data-type="image" tabindex="1"><img src="https://IamQwQ.github.io/post-images/1603648333169.png" alt="" loading="lazy"></figure>
<p>而实例化就是从抽象的类中实际刻画出一个<a href="https://zhidao.baidu.com/question/84649688.html">对象</a>来，只有实例化之后一个对象之后才能调用其属性和行为。</p>
<h3 id="构成类的成员">构成类的成员</h3>
<p>上文说过类中存在属性和行为，属性对应代码中的成员变量及常量(统称字段)，而行为则对应方法。除了字段和方法，类还有以下成员</p>
<ul>
<li>构造方法</li>
<li>内部类</li>
<li>初始化块</li>
</ul>
<p>面向对象是一种编程思想，此处既然说到面向对象就不得不提到另一种与其相对的思想：面向过程</p>
<h3 id="面向过程与面向对象的区别">面向过程与面向对象的区别</h3>
<p>在面向过程中，我们通常先分析事情所需要的步骤和过程，以一个学生的日常来说：</p>
<blockquote>
<ol>
<li>起床</li>
<li>穿衣</li>
<li>洗漱</li>
<li>上学</li>
</ol>
</blockquote>
<blockquote>
<p>而这4步就是一步一步地完成，它的顺序很重要，你只需要一个一个地实现就行了。</p>
</blockquote>
<p>他的思想重点在于他的过程，程序的流程就是一个函数调用另外一个函数，而这个函数又再调用其他的函数，这里再举一个吃西瓜的例子，当使用面向过程的思想去实现一个人吃西瓜时，直接写一个吃函数，吃什么？吃西瓜参数。</p>
<p>而面向对象则需要建立一个人的实体，由实体引发事件，先抽象出一个&quot;人&quot;类，在这个&quot;人&quot;类里有一些人的基本属性，如身高，年龄；人还会有行为，所以&quot;人&quot;类中还有方法，走方法，说话方法，吃方法，喝方法等等... 此时需求是让人吃西瓜，所以把抽象的类实例出一个人出来，最终让 人.吃(西瓜)；</p>
<p>而且面向对象丰富的特性(如继承、多态)使得其十分灵活，而面向过程则显得十分笨重</p>
<blockquote>
<p>应对新需求时，无需更改已经测试通过的既有的类。它良好的灵活性和拓展性仿佛天生就是用来适应变化的。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我和咖啡]]></title>
        <id>https://IamQwQ.github.io/post/aboutCoffee/</id>
        <link href="https://IamQwQ.github.io/post/aboutCoffee/">
        </link>
        <updated>2020-10-25T17:16:51.000Z</updated>
        <content type="html"><![CDATA[<p>写这篇记录之前，我本想去起笔去写java的东西的，但现在是一个晚上，本来精神不振，混混沉沉，所以生出了买瓶装咖啡的想法，现在一瓶咖啡一块面包下肚，配合网易云食用霎时间精神焕发，据主观推测不出意料的话应该是要过美国人的时间表了..</p>
<blockquote>
<p>“咖啡”一词源自阿拉伯语“قهوة”，意思是“植物饮料”。在世界各地，人们越来越爱喝咖啡。随之而来的“<a href="https://baike.baidu.com/item/%E5%92%96%E5%95%A1%E6%96%87%E5%8C%96">咖啡文化</a>”充满生活的每个时刻。无论在家里、还是在办公室、或是各种社交场合，人们都在品着咖啡、它逐渐与时尚、现代生活、工作和休闲娱乐联系在一起。</p>
</blockquote>
<blockquote>
<p>咖啡豆含有大约100种不同的物质，包括咖啡因、单宁酸、油和氮化合物等，每100克速溶咖啡中，含咖啡因44～100毫克；每100克调制咖啡中，含咖啡因64～124毫克。咖啡是一种兴奋剂，对人体会产生很多影响，它可利尿、刺激中枢神经和呼吸系统、扩大血管、使心跳加速、增强横纹肌的力量以及缓解大脑和肌肉疲劳。</p>
</blockquote>
<p>实实在在的说，接触咖啡的原因是其功能性。虽然很想说是因为其味道独特，入口如何如何，咽下回味又如何如何，但很遗憾，饮用咖啡的绝大多数时候都是觉得需要提神，而且我觉得应该有不会少的人都是因为这个而去喝咖啡的吧。</p>
<p>为什么喝苦咖啡？</p>
<p>喝美式低糖的时候确实很苦，只是一开始的时候会这么想，缘于其功效也比其他咖啡要强的多，所以从接触之后时不时就想整一瓶，后来再喝的时候苦的感受却没有那么强烈了，喝下去的时候确实是苦的，但是却忍不住一口一口再喝下去，难道是觉醒了奇怪的品味属性( ? )，凭心而论，喝的时候没有那么仔细品味。后来找到了一个简单的答案：</p>
<p><strong>当你习惯了，它就是美味了</strong>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java Swing组件]]></title>
        <id>https://IamQwQ.github.io/post/javaSwingAssembly/</id>
        <link href="https://IamQwQ.github.io/post/javaSwingAssembly/">
        </link>
        <updated>2020-10-21T08:20:25.000Z</updated>
        <content type="html"><![CDATA[<h2 id="swing基本介绍">Swing基本介绍</h2>
<p>awt是java1.0中的基础类(抽象窗口工具箱) 为了给程序员构建一个通用的gui使其能够在所有的平台上运行，但没有达到预期的效果，所以有了swing</p>
<p>swing不能代替awt，所以swing和awt是需要同时出现在一个图形用户界面当中</p>
<h3 id="swing组件特点">swing组件特点</h3>
<blockquote>
<p>轻量级</p>
<p>可插入外观组件</p>
</blockquote>
<h2 id="swing的常用窗体及其常用方法">Swing的常用窗体及其常用方法</h2>
<p>窗体是各个组件的载体，下图为组件和窗体的关系</p>
<figure data-type="image" tabindex="1"><img src="https://IamQwQ.github.io/post-images/1603295667911.png" alt="" loading="lazy"></figure>
<h3 id="jframe窗体">JFrame窗体</h3>
<p>拥有边界和最大化、最小化和关闭的顶层窗口</p>
<pre><code class="language-java">JFrame jf = new JFrame(&quot;this is a test&quot;);
Container container = jf.getContentPane();
</code></pre>
<p>jf是JFrame对象</p>
<p>container是Container对象，可以使用JFrame对象调用getContentPane()方法获取，实际上就是获取当前窗口的内容窗格</p>
<p>swing组件的窗体通常与组件和容器有关，所以JFrame对象创建完成后，需要调用getContentPane() 方法将窗体转换为容器，然后在容器中添加组件或者设置布局管理器</p>
<p>Q：或许如果自己码字会发现，不使用getContentPane()也是可以直接添加组件的阿，那么getContentPane()方法的意义何在呢？<br>
A：<a href="https://IamQwQ.github.io/post/javaSwingAssemblyGetcontentpane/">点击跳转至getContentPane的意义研究</a></p>
<p>容器已经准备好了，此时如果需要把组件添加进容器的话可以使用Container类的add方法</p>
<pre><code class="language-java">Button testButton = new Button(&quot;test button&quot;);
container.add(testButton);
</code></pre>
<p>阿 常用的方法有空再补上</p>
<p><code>以下是一个swing显示图片的实例</code></p>
<pre><code class="language-java">import javax.swing.*
import java.awt.*

public class test{
    public static void main(String[] args){
        
    }
    public static void newwindows(String title){
        //创建JFrame对象
        JFrame jf = new JFrame(title);
        //转换为内容窗口对象 
        //(此处设置颜色使用container对象的原因是rootpane显示在最上层 所以要通过内容窗格来设置颜色)
        Container container = jf.getContentPane();
        
        //窗口设置
        //设置窗口关闭方式
        jf.setDefaultCloseOperation(WindowConstant.Exit_On_Close);
        //设置窗口窗顶栏不可见 (设置不加修饰)
        jf.setUndecorated(true);
        //设置窗口可见
        jf.setVisible(true);
        //设置窗口透明程度
        jf.setOpacity(0.5);
        //窗口颜色
        container.setBackground(Color.black);
        
        //组件设置
        //创建JLable标签
        JLable jl = new JLable();
        //创建imageicon对象用来创建icon图符
        ImageIcon icon = new ImageIcon(url[此处指url变量]);
        //seticon方法将icon添加至jl中
        jl.setIcon(icon);
        //将jl添加至容器中
        container.add(jl);
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[TestPage]]></title>
        <id>https://IamQwQ.github.io/post/testpage/</id>
        <link href="https://IamQwQ.github.io/post/testpage/">
        </link>
        <updated>2020-10-21T04:47:55.000Z</updated>
        <content type="html"><![CDATA[<p>&quot;test test&quot;</p>
<blockquote>
<p>markdown is ready</p>
</blockquote>
]]></content>
    </entry>
</feed>